apiVersion: v1
kind: Pod

metadata:
  name: myapp-pod
  labels:
    app: myapp
  annotations:
    buildversion: <1.1.0>

spec:
  securityContext:
    runAsUser: <user-id>

  serviceAccountName: <name>

  nodeSelector:
    <node-label-key>: <node-label-value>

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
            - key: <node-label-key>
              operator: <In/NotIn/Exists>
              values:
              - <node-label-values>
              - <Medium>

  tolerations:
    - key: "key"
      operator: "Equal"
      value: "value"
      effect: "NoSchedule | PreferNoSchedule | NoExecute"

  restartPolicy: Always/Never

  containers:
    - name: ngnix-container
      image: nginx
      command: ["sleep"]
      args: ["5000"]

      volumeMounts:
        - mountPath: /opt/
          name: abc


      readinessProbe:
      livenessProbe:
        initialDelaySeconds: 10
        periodSeconds: 5
        failureThreshold: 8
        httpGet:
          path: /api/ready
          port: 8080
        tcpSocket:
          port: 8090
        exec:
          command:
            - cat
            - /app/isready

      ports:
        - containerPort: 8080

      env:
        - name: <NAME>
          value: <VALUE>
          valueFrom:
            configMapKeyRef:
              name: <config-map-name>
              key: <key>
            secretKeyRef:
              name: <secret-name>
              key: <key>

      envFrom:
        - configMapRef:
            name: <config-map-name>
        - secretRef:
            name: <secret-name>

      securityContext:
        runAsUser: <userid>
        capabilities:
          add: ["MAC_ADMIN"]

      resources:
        requests:
          cpu: 1
          memory: "1Gi"
        limits:
          cpu: 2
          memory: "2Gi"

  volumes:
    - name: app-config-volume
      persistentVolumeClaim:
        claimName: <pvc-name>
      configMap:
        name: <config-map-name>
      secret:
        secretName: <secret-name>
      hostPath:
        path: /opt/
        type: Directory



